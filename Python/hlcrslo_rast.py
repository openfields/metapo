#!/usr/bin/env python
#
##############################################################################
#
# MODULE:       model
#
# AUTHOR(S):    u4cnnwrf
#
# PURPOSE:      Script generated by wxGUI Graphical Modeler.
#
# DATE:         Mon Sep 10 12:09:40 2018
#
##############################################################################

#%module
#% description: Script generated by wxGUI Graphical Modeler.
#%end

import sys
import os
import atexit

from grass.script import parser, run_command

def cleanup():
    pass

def main():
  # set region & mask
    run_command("g.region", 
                vector = "hlcrslo_65r")

    run_command("r.mask",
                vector="hlcrslo_65r",
                layer = "1")

  # mapcalc expressions to get rasters
    run_command("r.mapcalc", 
                expression = "hlcrslo_65r" + "_tmpvd=if(us_140vdep<67,1,null())")
                
    run_command("r.mapcalc", 
                expression = "hlcrslo_65r" + "_tmp71=if(nlcd_2011v14==71,1,null())")
                
    run_command("r.mapcalc", 
                expression = "hlcrslo_65r" + "_tmp43=if(nlcd_2011v14==43,1,null())")
                
    run_command("r.mapcalc", 
                expression = "hlcrslo_65r" + "_tmp52=if(nlcd_2011v14==52,1,null())")
                
    run_command("r.mapcalc",
                expression = "hlcrslo_65r_71=hlcrslo_65r_tmpvd*hlcrslo_65r_tmp71")
                
    run_command("r.mapcalc",
                expression = "hlcrslo_65r_52=hlcrslo_65r_tmpvd*hlcrslo_65r_tmp52")                

    run_command("r.mapcalc",
                expression = "hlcrslo_65r_43=hlcrslo_65r_tmpvd*hlcrslo_65r_tmp43")

  # convert rasters to vectors
    run_command("r.to.vect",
                input = "hlcrslo_65r_71",
                output = "hlcrslo_65r_71",
                type = "area",
                column = "value")
                
    run_command("r.to.vect",
                input = "hlcrslo_65r_52",
                output = "hlcrslo_65r_52",
                type = "area",
                column = "value")
                   
    run_command("r.to.vect",
                input = "hlcrslo_65r_43",
                output = "hlcrslo_65r_43",
                type = "area",
                column = "value")

  # remove mask
    run_command("r.mask",
                flags = 'r',
                maskcats = "*",
                layer = "1")


    return 0

if __name__ == "__main__":
    options, flags = parser()
    atexit.register(cleanup)
    sys.exit(main())
